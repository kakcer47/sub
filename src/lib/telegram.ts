import { TelegramUser } from '../types'

declare global {
  interface Window {
    Telegram?: {
      WebApp: {
        initData: string
        initDataUnsafe: {
          user?: TelegramUser
        }
        ready(): void
        expand(): void
        close(): void
        openTelegramLink(url: string): void
      }
    }
  }
}

export const telegram = window.Telegram?.WebApp

export const getTelegramUser = (): TelegramUser | null => {
  try {
    console.log('üîç Checking for Telegram Web App...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram Web App
    const telegramUser = telegram?.initDataUnsafe?.user
    
    if (telegramUser) {
      console.log('‚úÖ Telegram user found:', telegramUser.first_name)
      return telegramUser
    }
    
    // Fallback –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (import.meta.env.DEV) {
      console.warn('üß™ Using development Telegram user fallback')
      return {
        id: 12345,
        first_name: 'Dev',
        last_name: 'User',
        username: 'devuser'
      }
    }
    
    console.warn('‚ùå Telegram WebApp not found and not in dev mode')
    return null
    
  } catch (error) {
    console.error('‚ùå Error getting Telegram user:', error)
    
    // Fallback –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    if (import.meta.env.DEV) {
      console.warn('üÜò Using emergency fallback user')
      return {
        id: 99999,
        first_name: 'Emergency',
        last_name: 'User',
        username: 'emergency'
      }
    }
    
    return null
  }
}

export const openTelegramProfile = (username: string) => {
  try {
    if (telegram && telegram.openTelegramLink) {
      telegram.openTelegramLink(`https://t.me/${username}`)
    } else {
      // Fallback –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      window.open(`https://t.me/${username}`, '_blank')
    }
  } catch (error) {
    console.error('Error opening Telegram profile:', error)
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π fallback
    window.open(`https://t.me/${username}`, '_blank')
  }
}

export const initTelegram = () => {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App...');
    if (telegram) {
      console.log('‚úÖ Telegram Web App –Ω–∞–π–¥–µ–Ω');
      telegram.ready()
      telegram.expand()
      console.log('‚úÖ Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('‚ùå Telegram Web App –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  } catch (error) {
    console.error('Error initializing Telegram WebApp:', error)
  }
}